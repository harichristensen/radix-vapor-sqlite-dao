//
// StateAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class StateAPI {

    /**
     Get Account authorized depositors
     
     - parameter stateAccountAuthorizedDepositorsPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func accountAuthorizedDepositorsPage(stateAccountAuthorizedDepositorsPageRequest: StateAccountAuthorizedDepositorsPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateAccountAuthorizedDepositorsPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return accountAuthorizedDepositorsPageWithRequestBuilder(stateAccountAuthorizedDepositorsPageRequest: stateAccountAuthorizedDepositorsPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Account authorized depositors
     - POST /state/account/page/authorized-depositors
     - Returns paginable collection of authorized depositors for given account. 
     - parameter stateAccountAuthorizedDepositorsPageRequest: (body)  
     - returns: RequestBuilder<StateAccountAuthorizedDepositorsPageResponse> 
     */
    open class func accountAuthorizedDepositorsPageWithRequestBuilder(stateAccountAuthorizedDepositorsPageRequest: StateAccountAuthorizedDepositorsPageRequest) -> RequestBuilder<StateAccountAuthorizedDepositorsPageResponse> {
        let localVariablePath = "/state/account/page/authorized-depositors"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateAccountAuthorizedDepositorsPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateAccountAuthorizedDepositorsPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Account resource preferences
     
     - parameter stateAccountResourcePreferencesPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func accountResourcePreferencesPage(stateAccountResourcePreferencesPageRequest: StateAccountResourcePreferencesPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateAccountResourcePreferencesPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return accountResourcePreferencesPageWithRequestBuilder(stateAccountResourcePreferencesPageRequest: stateAccountResourcePreferencesPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Account resource preferences
     - POST /state/account/page/resource-preferences
     - Returns paginable collection of resource preference rules for given account. 
     - parameter stateAccountResourcePreferencesPageRequest: (body)  
     - returns: RequestBuilder<StateAccountResourcePreferencesPageResponse> 
     */
    open class func accountResourcePreferencesPageWithRequestBuilder(stateAccountResourcePreferencesPageRequest: StateAccountResourcePreferencesPageRequest) -> RequestBuilder<StateAccountResourcePreferencesPageResponse> {
        let localVariablePath = "/state/account/page/resource-preferences"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateAccountResourcePreferencesPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateAccountResourcePreferencesPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get page of Global Entity Fungible Resource Vaults
     
     - parameter stateEntityFungibleResourceVaultsPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entityFungibleResourceVaultPage(stateEntityFungibleResourceVaultsPageRequest: StateEntityFungibleResourceVaultsPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityFungibleResourceVaultsPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entityFungibleResourceVaultPageWithRequestBuilder(stateEntityFungibleResourceVaultsPageRequest: stateEntityFungibleResourceVaultsPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get page of Global Entity Fungible Resource Vaults
     - POST /state/entity/page/fungible-vaults/
     - Returns vaults for fungible resource owned by a given global entity. The returned response is in a paginated format, ordered by the resource's first appearance on the ledger. 
     - parameter stateEntityFungibleResourceVaultsPageRequest: (body)  
     - returns: RequestBuilder<StateEntityFungibleResourceVaultsPageResponse> 
     */
    open class func entityFungibleResourceVaultPageWithRequestBuilder(stateEntityFungibleResourceVaultsPageRequest: StateEntityFungibleResourceVaultsPageRequest) -> RequestBuilder<StateEntityFungibleResourceVaultsPageResponse> {
        let localVariablePath = "/state/entity/page/fungible-vaults/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityFungibleResourceVaultsPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityFungibleResourceVaultsPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get page of Global Entity Fungible Resource Balances
     
     - parameter stateEntityFungiblesPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entityFungiblesPage(stateEntityFungiblesPageRequest: StateEntityFungiblesPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityFungiblesPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entityFungiblesPageWithRequestBuilder(stateEntityFungiblesPageRequest: stateEntityFungiblesPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get page of Global Entity Fungible Resource Balances
     - POST /state/entity/page/fungibles/
     - Returns the total amount of each fungible resource owned by a given global entity. Result can be aggregated globally or per vault. The returned response is in a paginated format, ordered by the resource's first appearance on the ledger. 
     - parameter stateEntityFungiblesPageRequest: (body)  
     - returns: RequestBuilder<StateEntityFungiblesPageResponse> 
     */
    open class func entityFungiblesPageWithRequestBuilder(stateEntityFungiblesPageRequest: StateEntityFungiblesPageRequest) -> RequestBuilder<StateEntityFungiblesPageResponse> {
        let localVariablePath = "/state/entity/page/fungibles/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityFungiblesPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityFungiblesPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Entity Metadata Page
     
     - parameter stateEntityMetadataPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entityMetadataPage(stateEntityMetadataPageRequest: StateEntityMetadataPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityMetadataPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entityMetadataPageWithRequestBuilder(stateEntityMetadataPageRequest: stateEntityMetadataPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Entity Metadata Page
     - POST /state/entity/page/metadata
     - Returns all the metadata properties associated with a given global entity. The returned response is in a paginated format, ordered by first appearance on the ledger. 
     - parameter stateEntityMetadataPageRequest: (body)  
     - returns: RequestBuilder<StateEntityMetadataPageResponse> 
     */
    open class func entityMetadataPageWithRequestBuilder(stateEntityMetadataPageRequest: StateEntityMetadataPageRequest) -> RequestBuilder<StateEntityMetadataPageResponse> {
        let localVariablePath = "/state/entity/page/metadata"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityMetadataPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityMetadataPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get page of Non-Fungibles in Vault
     
     - parameter stateEntityNonFungibleIdsPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entityNonFungibleIdsPage(stateEntityNonFungibleIdsPageRequest: StateEntityNonFungibleIdsPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityNonFungibleIdsPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entityNonFungibleIdsPageWithRequestBuilder(stateEntityNonFungibleIdsPageRequest: stateEntityNonFungibleIdsPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get page of Non-Fungibles in Vault
     - POST /state/entity/page/non-fungible-vault/ids
     - Returns all non-fungible IDs of a given non-fungible resource owned by a given entity. The returned response is in a paginated format, ordered by the resource's first appearence on the ledger. 
     - parameter stateEntityNonFungibleIdsPageRequest: (body)  
     - returns: RequestBuilder<StateEntityNonFungibleIdsPageResponse> 
     */
    open class func entityNonFungibleIdsPageWithRequestBuilder(stateEntityNonFungibleIdsPageRequest: StateEntityNonFungibleIdsPageRequest) -> RequestBuilder<StateEntityNonFungibleIdsPageResponse> {
        let localVariablePath = "/state/entity/page/non-fungible-vault/ids"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityNonFungibleIdsPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityNonFungibleIdsPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get page of Global Entity Non-Fungible Resource Vaults
     
     - parameter stateEntityNonFungibleResourceVaultsPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entityNonFungibleResourceVaultPage(stateEntityNonFungibleResourceVaultsPageRequest: StateEntityNonFungibleResourceVaultsPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityNonFungibleResourceVaultsPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entityNonFungibleResourceVaultPageWithRequestBuilder(stateEntityNonFungibleResourceVaultsPageRequest: stateEntityNonFungibleResourceVaultsPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get page of Global Entity Non-Fungible Resource Vaults
     - POST /state/entity/page/non-fungible-vaults/
     - Returns vaults for non fungible resource owned by a given global entity. The returned response is in a paginated format, ordered by the resource's first appearance on the ledger. 
     - parameter stateEntityNonFungibleResourceVaultsPageRequest: (body)  
     - returns: RequestBuilder<StateEntityNonFungibleResourceVaultsPageResponse> 
     */
    open class func entityNonFungibleResourceVaultPageWithRequestBuilder(stateEntityNonFungibleResourceVaultsPageRequest: StateEntityNonFungibleResourceVaultsPageRequest) -> RequestBuilder<StateEntityNonFungibleResourceVaultsPageResponse> {
        let localVariablePath = "/state/entity/page/non-fungible-vaults/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityNonFungibleResourceVaultsPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityNonFungibleResourceVaultsPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get page of Global Entity Non-Fungible Resource Balances
     
     - parameter stateEntityNonFungiblesPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entityNonFungiblesPage(stateEntityNonFungiblesPageRequest: StateEntityNonFungiblesPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityNonFungiblesPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entityNonFungiblesPageWithRequestBuilder(stateEntityNonFungiblesPageRequest: stateEntityNonFungiblesPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get page of Global Entity Non-Fungible Resource Balances
     - POST /state/entity/page/non-fungibles/
     - Returns the total amount of each non-fungible resource owned by a given global entity. Result can be aggregated globally or per vault. The returned response is in a paginated format, ordered by the resource's first appearance on the ledger. 
     - parameter stateEntityNonFungiblesPageRequest: (body)  
     - returns: RequestBuilder<StateEntityNonFungiblesPageResponse> 
     */
    open class func entityNonFungiblesPageWithRequestBuilder(stateEntityNonFungiblesPageRequest: StateEntityNonFungiblesPageRequest) -> RequestBuilder<StateEntityNonFungiblesPageResponse> {
        let localVariablePath = "/state/entity/page/non-fungibles/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityNonFungiblesPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityNonFungiblesPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Entity Schema Page
     
     - parameter stateEntitySchemaPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func entitySchemaPage(stateEntitySchemaPageRequest: StateEntitySchemaPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntitySchemaPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return entitySchemaPageWithRequestBuilder(stateEntitySchemaPageRequest: stateEntitySchemaPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Entity Schema Page
     - POST /state/entity/page/schemas
     - Returns all the schemas associated with a given global entity. The returned response is in a paginated format, ordered by first appearance on the ledger. 
     - parameter stateEntitySchemaPageRequest: (body)  
     - returns: RequestBuilder<StateEntitySchemaPageResponse> 
     */
    open class func entitySchemaPageWithRequestBuilder(stateEntitySchemaPageRequest: StateEntitySchemaPageRequest) -> RequestBuilder<StateEntitySchemaPageResponse> {
        let localVariablePath = "/state/entity/page/schemas"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntitySchemaPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntitySchemaPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get KeyValueStore Data
     
     - parameter stateKeyValueStoreDataRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func keyValueStoreData(stateKeyValueStoreDataRequest: StateKeyValueStoreDataRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateKeyValueStoreDataResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return keyValueStoreDataWithRequestBuilder(stateKeyValueStoreDataRequest: stateKeyValueStoreDataRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get KeyValueStore Data
     - POST /state/key-value-store/data
     - Returns data (value) associated with a given key of a given key-value store. [Check detailed documentation for explanation](#section/How-to-query-the-content-of-a-key-value-store-inside-a-component) 
     - parameter stateKeyValueStoreDataRequest: (body)  
     - returns: RequestBuilder<StateKeyValueStoreDataResponse> 
     */
    open class func keyValueStoreDataWithRequestBuilder(stateKeyValueStoreDataRequest: StateKeyValueStoreDataRequest) -> RequestBuilder<StateKeyValueStoreDataResponse> {
        let localVariablePath = "/state/key-value-store/data"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateKeyValueStoreDataRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateKeyValueStoreDataResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get KeyValueStore Keys
     
     - parameter stateKeyValueStoreKeysRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func keyValueStoreKeys(stateKeyValueStoreKeysRequest: StateKeyValueStoreKeysRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateKeyValueStoreKeysResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return keyValueStoreKeysWithRequestBuilder(stateKeyValueStoreKeysRequest: stateKeyValueStoreKeysRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get KeyValueStore Keys
     - POST /state/key-value-store/keys
     - Allows to iterate over key value store keys.
     - parameter stateKeyValueStoreKeysRequest: (body)  
     - returns: RequestBuilder<StateKeyValueStoreKeysResponse> 
     */
    open class func keyValueStoreKeysWithRequestBuilder(stateKeyValueStoreKeysRequest: StateKeyValueStoreKeysRequest) -> RequestBuilder<StateKeyValueStoreKeysResponse> {
        let localVariablePath = "/state/key-value-store/keys"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateKeyValueStoreKeysRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateKeyValueStoreKeysResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Non-Fungible Data
     
     - parameter stateNonFungibleDataRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func nonFungibleData(stateNonFungibleDataRequest: StateNonFungibleDataRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateNonFungibleDataResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return nonFungibleDataWithRequestBuilder(stateNonFungibleDataRequest: stateNonFungibleDataRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Non-Fungible Data
     - POST /state/non-fungible/data
     - Returns data associated with a given non-fungible ID of a given non-fungible resource. 
     - parameter stateNonFungibleDataRequest: (body)  
     - returns: RequestBuilder<StateNonFungibleDataResponse> 
     */
    open class func nonFungibleDataWithRequestBuilder(stateNonFungibleDataRequest: StateNonFungibleDataRequest) -> RequestBuilder<StateNonFungibleDataResponse> {
        let localVariablePath = "/state/non-fungible/data"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateNonFungibleDataRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateNonFungibleDataResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get page of Non-Fungible Ids in Resource Collection
     
     - parameter stateNonFungibleIdsRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func nonFungibleIds(stateNonFungibleIdsRequest: StateNonFungibleIdsRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateNonFungibleIdsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return nonFungibleIdsWithRequestBuilder(stateNonFungibleIdsRequest: stateNonFungibleIdsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get page of Non-Fungible Ids in Resource Collection
     - POST /state/non-fungible/ids
     - Returns the non-fungible IDs of a given non-fungible resource. Returned response is in a paginated format, ordered by their first appearance on the ledger. 
     - parameter stateNonFungibleIdsRequest: (body)  
     - returns: RequestBuilder<StateNonFungibleIdsResponse> 
     */
    open class func nonFungibleIdsWithRequestBuilder(stateNonFungibleIdsRequest: StateNonFungibleIdsRequest) -> RequestBuilder<StateNonFungibleIdsResponse> {
        let localVariablePath = "/state/non-fungible/ids"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateNonFungibleIdsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateNonFungibleIdsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Non-Fungible Location
     
     - parameter stateNonFungibleLocationRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func nonFungibleLocation(stateNonFungibleLocationRequest: StateNonFungibleLocationRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateNonFungibleLocationResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return nonFungibleLocationWithRequestBuilder(stateNonFungibleLocationRequest: stateNonFungibleLocationRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Non-Fungible Location
     - POST /state/non-fungible/location
     - Returns location of a given non-fungible ID. 
     - parameter stateNonFungibleLocationRequest: (body)  
     - returns: RequestBuilder<StateNonFungibleLocationResponse> 
     */
    open class func nonFungibleLocationWithRequestBuilder(stateNonFungibleLocationRequest: StateNonFungibleLocationRequest) -> RequestBuilder<StateNonFungibleLocationResponse> {
        let localVariablePath = "/state/non-fungible/location"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateNonFungibleLocationRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateNonFungibleLocationResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Package Blueprints Page
     
     - parameter statePackageBlueprintPageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func packageBlueprintPage(statePackageBlueprintPageRequest: StatePackageBlueprintPageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StatePackageBlueprintPageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return packageBlueprintPageWithRequestBuilder(statePackageBlueprintPageRequest: statePackageBlueprintPageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Package Blueprints Page
     - POST /state/package/page/blueprints
     - Returns all the blueprints associated with a given package entity. The returned response is in a paginated format, ordered by first appearance on the ledger. 
     - parameter statePackageBlueprintPageRequest: (body)  
     - returns: RequestBuilder<StatePackageBlueprintPageResponse> 
     */
    open class func packageBlueprintPageWithRequestBuilder(statePackageBlueprintPageRequest: StatePackageBlueprintPageRequest) -> RequestBuilder<StatePackageBlueprintPageResponse> {
        let localVariablePath = "/state/package/page/blueprints"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: statePackageBlueprintPageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StatePackageBlueprintPageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Package Codes Page
     
     - parameter statePackageCodePageRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func packageCodePage(statePackageCodePageRequest: StatePackageCodePageRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StatePackageCodePageResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return packageCodePageWithRequestBuilder(statePackageCodePageRequest: statePackageCodePageRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Package Codes Page
     - POST /state/package/page/codes
     - Returns all the codes associated with a given package entity. The returned response is in a paginated format, ordered by first appearance on the ledger. 
     - parameter statePackageCodePageRequest: (body)  
     - returns: RequestBuilder<StatePackageCodePageResponse> 
     */
    open class func packageCodePageWithRequestBuilder(statePackageCodePageRequest: StatePackageCodePageRequest) -> RequestBuilder<StatePackageCodePageResponse> {
        let localVariablePath = "/state/package/page/codes"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: statePackageCodePageRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StatePackageCodePageResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Entity Details
     
     - parameter stateEntityDetailsRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func stateEntityDetails(stateEntityDetailsRequest: StateEntityDetailsRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateEntityDetailsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return stateEntityDetailsWithRequestBuilder(stateEntityDetailsRequest: stateEntityDetailsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Entity Details
     - POST /state/entity/details
     - Returns detailed information for collection of entities. Aggregate resources globally by default. 
     - parameter stateEntityDetailsRequest: (body)  
     - returns: RequestBuilder<StateEntityDetailsResponse> 
     */
    open class func stateEntityDetailsWithRequestBuilder(stateEntityDetailsRequest: StateEntityDetailsRequest) -> RequestBuilder<StateEntityDetailsResponse> {
        let localVariablePath = "/state/entity/details"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateEntityDetailsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateEntityDetailsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     Get Validators List
     
     - parameter stateValidatorsListRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func stateValidatorsList(stateValidatorsListRequest: StateValidatorsListRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StateValidatorsListResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return stateValidatorsListWithRequestBuilder(stateValidatorsListRequest: stateValidatorsListRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Validators List
     - POST /state/validators/list
     - parameter stateValidatorsListRequest: (body)  
     - returns: RequestBuilder<StateValidatorsListResponse> 
     */
    open class func stateValidatorsListWithRequestBuilder(stateValidatorsListRequest: StateValidatorsListRequest) -> RequestBuilder<StateValidatorsListResponse> {
        let localVariablePath = "/state/validators/list"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: stateValidatorsListRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StateValidatorsListResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
