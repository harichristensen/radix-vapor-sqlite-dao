//
// StreamAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class StreamAPI {

    /**
     Get Transactions Stream
     
     - parameter streamTransactionsRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func streamTransactions(streamTransactionsRequest: StreamTransactionsRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: StreamTransactionsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return streamTransactionsWithRequestBuilder(streamTransactionsRequest: streamTransactionsRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Transactions Stream
     - POST /stream/transactions
     - Returns transactions which have been committed to the ledger. [Check detailed documentation for brief explanation](#section/Using-the-streamtransactions-endpoint) 
     - parameter streamTransactionsRequest: (body)  
     - returns: RequestBuilder<StreamTransactionsResponse> 
     */
    open class func streamTransactionsWithRequestBuilder(streamTransactionsRequest: StreamTransactionsRequest) -> RequestBuilder<StreamTransactionsResponse> {
        let localVariablePath = "/stream/transactions"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: streamTransactionsRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<StreamTransactionsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
