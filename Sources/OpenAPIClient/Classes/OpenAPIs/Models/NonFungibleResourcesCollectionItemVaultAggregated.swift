//
// NonFungibleResourcesCollectionItemVaultAggregated.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct NonFungibleResourcesCollectionItemVaultAggregated: Codable, JSONEncodable, Hashable {

    public var aggregationLevel: ResourceAggregationLevel
    /** Bech32m-encoded human readable version of the address. */
    public var resourceAddress: String
    public var explicitMetadata: EntityMetadataCollection?
    public var vaults: NonFungibleResourcesCollectionItemVaultAggregatedVault

    public init(aggregationLevel: ResourceAggregationLevel, resourceAddress: String, explicitMetadata: EntityMetadataCollection? = nil, vaults: NonFungibleResourcesCollectionItemVaultAggregatedVault) {
        self.aggregationLevel = aggregationLevel
        self.resourceAddress = resourceAddress
        self.explicitMetadata = explicitMetadata
        self.vaults = vaults
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case aggregationLevel = "aggregation_level"
        case resourceAddress = "resource_address"
        case explicitMetadata = "explicit_metadata"
        case vaults
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(aggregationLevel, forKey: .aggregationLevel)
        try container.encode(resourceAddress, forKey: .resourceAddress)
        try container.encodeIfPresent(explicitMetadata, forKey: .explicitMetadata)
        try container.encode(vaults, forKey: .vaults)
    }
}

