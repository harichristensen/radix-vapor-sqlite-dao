//
// EventsItem.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EventsItem: Codable, JSONEncodable, Hashable {

    public var name: String
    /** This type is defined in the Core API as `EventEmitterIdentifier`. See the Core API documentation for more details.  */
    public var emitter: AnyCodable
    public var data: ProgrammaticScryptoSborValue

    public init(name: String, emitter: AnyCodable, data: ProgrammaticScryptoSborValue) {
        self.name = name
        self.emitter = emitter
        self.data = data
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case emitter
        case data
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(name, forKey: .name)
        try container.encode(emitter, forKey: .emitter)
        try container.encode(data, forKey: .data)
    }
}

